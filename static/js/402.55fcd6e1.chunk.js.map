{"version":3,"file":"static/js/402.55fcd6e1.chunk.js","mappings":"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","sources":["components/ErrorBubble/ErrorBubble.jsx","components/InputField/InputField.jsx","schema/schema.js","components/Button/Button.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["const ErrorBubble = ({ message }) => {\n\n    if (/ must be a `date` type/i.test(message)) {\n        message = \"Date of birth is required\";\n    }\n\n\n    return (\n        <div className=\"absolute left-72 top-0  mt-1  bg-red-400 text-white  py-1 rounded  text-xs z-50 \" style={{ padding: \"4px 3px\" }}>\n            {message}\n        </div>\n    );\n};\nexport default ErrorBubble;\n","import ErrorBubble from 'components/ErrorBubble/ErrorBubble';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\n\nconst InputField = ({ name, label, type }) => {\n    const { register, formState: { errors } } = useFormContext();\n\n    return (\n        <div className='relative mb-4 block'>\n            <label htmlFor={name}>{label}</label><br />\n            <input className=' bg-white border border-border-gray w-72 h-12  px-4 focus:border-teal-900 rounded-xl text-base font-normal text-black' type={type} {...register(name)} />\n            {errors[name] && <ErrorBubble message={errors[name].message} />}\n\n        </div>\n    );\n};\n\nexport default InputField;\n","import * as yup from \"yup\";\r\n\r\nexport const authSchema = yup.object({\r\n  name: yup\r\n    .string()\r\n    .required(\"Full Name is required\")\r\n    .min(8, \"Name must be at least 8 characters\")\r\n    .max(50, \"Name must be no more than 50 characters\")\r\n    .matches(\r\n      /^[a-zA-Zа-яА-Я0-9\\s]*$/,\r\n      \"Name can only contain letters, numbers, and spaces\"\r\n    ),\r\n  email: yup\r\n    .string()\r\n    .trim()\r\n    .email()\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^[a-zA-Z0-9.-_]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/,\r\n      \"Invalid email format\"\r\n    ),\r\n  date_of_birth: yup.string().required(\"Date of birth is required\"),\r\n  about_us: yup.string().required(\"Please select an option\"),\r\n});\r\n","\nimport React from 'react';\n\n\nconst Button = ({ children, onClick, type }) => {\n\n    return (\n        <button type={type} onClick={onClick} className=\n            ' bg-teal-900 text-white rounded-full hover:bg-white hover:text-teal-900 px-4 py-2' style={{ border: \"solid 1px\", borderColor: \"rgba(251, 251, 251, 0.40)\" }}>\n            {children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport InputField from 'components/InputField/InputField';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { authSchema } from 'schema/schema';\nimport Button from 'components/Button/Button';\nimport ErrorBubble from 'components/ErrorBubble/ErrorBubble';\nimport { useDispatch } from 'react-redux';\nimport { eventRegistration } from 'store/operations';\nimport { useParams } from 'react-router-dom/dist';\n\n\nconst RegistrationForm = () => {\n    const dispatch = useDispatch();\n    const methods = useForm({\n        resolver: yupResolver(authSchema)\n    });\n    const { handleSubmit, formState: { errors }, register, reset } = methods;\n    const { id } = useParams();\n\n    const onSubmit = async (data) => {\n        try {\n            console.log(data)\n            await dispatch(eventRegistration({ id, data }));\n            reset();\n            toast.success(\"Registration successful\");\n        } catch (error) {\n\n            toast.error(\"Failed to register\");\n        }\n    };\n\n    return (\n        <FormProvider {...methods}>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"block gap-10 h-full\">\n                <h2 className=\"mb-10 text-6xl font-medium\">Event registration</h2>\n\n                <div className=\" relative\">\n                    <InputField type=\"text\" name=\"name\" label=\"Full Name\" />\n                    <InputField type=\"email\" name=\"email\" label=\"Email\" />\n                    <InputField type=\"date\" name=\"date_of_birth\" label=\"Date of birth\" />\n                    {errors.dateOfBirth && <ErrorBubble message={errors.dateOfBirth.message} />}\n                </div>\n                <div className='relative '>\n                    <p className='mb-4 mt-8'>Where did you hear about this event?</p>\n                    <input type=\"radio\" id=\"option1\" name=\"about_us\" value=\"Social media\" {...register(\"about_us\")} />\n                    <label className=' ml-2 mr-8' htmlFor=\"option1\">Social media</label>\n                    <input type=\"radio\" id=\"option2\" name=\"about_us\" value=\"Friends\" {...register(\"about_us\")} />\n                    <label className=' ml-2 mr-8' htmlFor=\"option2\">Friends</label>\n                    <input type=\"radio\" id=\"option3\" name=\"about_us\" value=\"Found myself\" {...register(\"about_us\")} />\n                    <label className=' ml-2 ' htmlFor=\"option3\">Found myself</label>\n                    {errors.about_us && <ErrorBubble message={errors.about_us.message} />}\n                </div>\n                <div className='ml-32 mt-16'><Button type=\"submit\" >Register</Button></div>\n\n            </form>\n\n        </FormProvider>\n    );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from \"components/RegistrationForm/RegistrationForm\";\n\n\nexport default function Registration() {\n\n    return (\n        <div className=\"h-full p-10\">\n            <RegistrationForm />\n        </div>\n    );\n}\n"],"names":["_ref","message","test","_jsx","className","style","padding","children","name","label","type","register","formState","errors","useFormContext","_jsxs","htmlFor","ErrorBubble","authSchema","yup","required","min","max","matches","email","trim","date_of_birth","about_us","onClick","border","borderColor","RegistrationForm","dispatch","useDispatch","methods","useForm","resolver","yupResolver","handleSubmit","reset","id","useParams","FormProvider","onSubmit","async","console","log","data","eventRegistration","toast","success","error","InputField","dateOfBirth","value","Button","Registration"],"sourceRoot":""}