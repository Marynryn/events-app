{"version":3,"file":"static/js/930.7dfb4a89.chunk.js","mappings":"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","sources":["components/Card/Card.jsx","components/SearchInput/SearchInput.jsx","pages/Participants/Participants.jsx","store/selectors.js"],"sourcesContent":["\nimport React from 'react'\n\n\n\nconst Card = ({ props }) => {\n\n    return (\n        <div className=\" p-4 \" >\n\n            <p className='text-sm mb-4 '>{props.name}</p>\n            <p className='text-sm'>{props.email}</p>\n\n\n        </div>)\n}\n\nexport default Card;","import { useDispatch } from \"react-redux\";\nimport { addFilter } from \"store/reducer\";\n\n\nconst SearchInput = () => {\n\n    const dispatch = useDispatch();\n    const changeFilter = event => {\n        const filter = event.currentTarget.value;\n        dispatch(addFilter(filter));\n\n    };\n    return (\n\n        <div className='mb-6'>\n            <h3 className='font-lg text-lg text-gray pb-2'>Find </h3>\n            <form >\n                <div className=''>\n                    <input className='px-4 py-1 rounded-2xl w-52' type=\"text\"\n                        name=\"name\"\n                        onChange={changeFilter}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\n                        required />\n                </div>\n            </form>\n        </div>\n\n    );\n};\n\nexport default SearchInput;","import Card from \"components/Card/Card\";\nimport SearchInput from \"components/SearchInput/SearchInput\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom/dist\";\nimport { fetchParticipants } from \"store/operations\";\nimport { selectGetEvents, selectVisibleParticipants } from \"store/selectors\";\n\n\nconst Participants = () => {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const events = useSelector(selectGetEvents);\n    const event = events.filter((event => event._id === id))\n    useEffect(() => {\n\n        dispatch(fetchParticipants({ id }));\n    }, [dispatch, id]);\n\n    const participants = useSelector(selectVisibleParticipants);\n    console.log(event);\n    return (<div className=\"p-10\">\n        <p className=\"text-5xl mb-10\">\"{event[0].title}\" participants</p>\n        <SearchInput />\n        <ul className=\"flex flex-wrap gap-10 \">{participants.map((el, index) => (<li key={index} className=\" bg-white rounded-2xl w-52 \" >\n            <Card props={el} />\n        </li>))}</ul>\n    </div>\n    )\n}\nexport default Participants;","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectGetEvents = (state) => state.events.items;\r\nexport const selectGetFilter = (state) => state.events.filter;\r\nexport const selectGetParticipants = (state) => state.events.participants;\r\nexport const selectIsLoading = (state) => state.events.isLoading;\r\nexport const selectError = (state) => state.events.error;\r\nexport const selectGetParticipantsFilter = (state) =>\r\n  state.events.participantsFilter;\r\nexport const selectVisibleEvents = createSelector(\r\n  selectGetEvents,\r\n  selectGetFilter,\r\n  (events, filter) => {\r\n    console.log(events, filter);\r\n    switch (filter) {\r\n      case \"AtoZ\":\r\n        return events.slice().sort((a, b) => a.title.localeCompare(b.title));\r\n      case \"ZtoA\":\r\n        return events.slice().sort((a, b) => b.title.localeCompare(a.title));\r\n      case \"organizer\":\r\n        return events\r\n          .slice()\r\n          .sort((a, b) => a.organizer.localeCompare(b.organizer));\r\n      case \"eventDate\":\r\n        return events\r\n          .slice()\r\n          .sort((a, b) => new Date(a.event_date) - new Date(b.event_date));\r\n      case \"showAll\":\r\n      default:\r\n        return events;\r\n    }\r\n  }\r\n);\r\nexport const selectVisibleParticipants = createSelector(\r\n  [selectGetParticipants, selectGetParticipantsFilter],\r\n  (participants, filter) => {\r\n    if (!participants.length) {\r\n      return [];\r\n    }\r\n    return participants.filter(\r\n      (participants) =>\r\n        participants.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        participants.email.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n"],"names":["_ref","props","_jsxs","className","children","_jsx","name","email","SearchInput","dispatch","useDispatch","type","onChange","event","filter","currentTarget","value","addFilter","pattern","title","required","Participants","id","useParams","useSelector","selectGetEvents","_id","useEffect","fetchParticipants","participants","selectVisibleParticipants","console","log","map","el","index","Card","state","events","items","selectIsLoading","isLoading","selectVisibleEvents","createSelector","slice","sort","a","b","localeCompare","organizer","Date","event_date","participantsFilter","length","toLowerCase","includes"],"sourceRoot":""}